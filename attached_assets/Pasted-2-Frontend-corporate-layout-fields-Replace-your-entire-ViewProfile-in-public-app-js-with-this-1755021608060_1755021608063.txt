2) Frontend — corporate layout & fields
Replace your entire ViewProfile() in public/app.js with this businesslike version:

js
Copy code
function ViewProfile() {
  const root = document.createElement("div");
  root.className = "container";
  root.appendChild(topNav());

  const wrap = document.createElement("div");
  wrap.className = "layout";
  root.appendChild(wrap);

  wrap.appendChild(sidebar());

  const main = document.createElement("div");
  main.className = "main";
  wrap.appendChild(main);

  const card = document.createElement("div");
  card.className = "card";
  card.innerHTML = `
    <div class="p">
      <header class="page-head">
        <div>
          <h2 class="page-title">Profile & Settings</h2>
          <p class="page-sub">Your corporate profile, access, and preferences</p>
        </div>
      </header>

      <!-- Identity & Employment -->
      <section class="panel">
        <div class="panel-head"><h3>Identity & Employment</h3></div>
        <div class="panel-body">
          <div class="grid-2-tight">
            <div class="id-left">
              <div class="avatar-row">
                <img id="avatar" class="avatar" alt="Avatar" src="/avatar-placeholder.png"/>
                <div class="avatar-actions">
                  <label class="label">Profile photo</label>
                  <input type="file" id="photo" accept="image/png,image/jpeg"/>
                  <button class="btn-ghost" id="uploadPhoto">Upload</button>
                </div>
              </div>
            </div>
            <div class="id-right">
              <div class="form-row">
                <div class="field">
                  <label class="label" for="name">Name</label>
                  <input id="name" class="input" placeholder="Full legal name"/>
                </div>
                <div class="field">
                  <label class="label" for="employeeId">Employee ID</label>
                  <input id="employeeId" class="input" placeholder="e.g., 123456"/>
                </div>
              </div>
              <div class="form-row">
                <div class="field">
                  <label class="label" for="email">Email</label>
                  <input id="email" class="input" disabled/>
                </div>
                <div class="field">
                  <label class="label" for="role">Role</label>
                  <input id="role" class="input" disabled/>
                </div>
              </div>
              <div class="form-row">
                <div class="field">
                  <label class="label" for="team">Team / Department</label>
                  <select id="team" class="input">
                    <option value="">Select…</option>
                    <option>Australian Equities</option>
                    <option>Fixed Income</option>
                    <option>Multi-Asset</option>
                    <option>Risk</option>
                    <option>Operations</option>
                    <option>Coverage</option>
                    <option>Technology</option>
                  </select>
                </div>
                <div class="field">
                  <label class="label" for="manager">Manager</label>
                  <input id="manager" class="input" placeholder="Manager name"/>
                </div>
              </div>
              <div class="form-row">
                <div class="field">
                  <label class="label" for="office">Office Location</label>
                  <select id="office" class="input">
                    <option value="">Select…</option>
                    <option>Melbourne</option>
                    <option>Sydney</option>
                    <option>Brisbane</option>
                    <option>London</option>
                    <option>New York</option>
                    <option>Singapore</option>
                  </select>
                </div>
                <div class="field">
                  <label class="label" for="costCenter">Cost Center</label>
                  <input id="costCenter" class="input" placeholder="e.g., AUEQ-101"/>
                </div>
              </div>
              <div class="form-row">
                <div class="field">
                  <label class="label" for="dob">Date of Birth</label>
                  <input id="dob" type="date" class="input"/>
                </div>
                <div class="field">
                  <label class="label" for="phone">Phone</label>
                  <input id="phone" class="input" placeholder="+61 …"/>
                </div>
              </div>
              <div class="actions">
                <button class="btn" id="saveProfile">Save Profile</button>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Systems & Market Data Access -->
      <section class="panel">
        <div class="panel-head"><h3>Systems & Market Data Access</h3></div>
        <div class="panel-body">
          <div class="access-grid">
            <label class="check"><input type="checkbox" id="accBloomberg"/> Bloomberg Terminal</label>
            <label class="check"><input type="checkbox" id="accFactset"/> FactSet</label>
            <label class="check"><input type="checkbox" id="accJpmProp"/> JPM Proprietary Systems</label>
            <label class="check"><input type="checkbox" id="accAladdin"/> BlackRock Aladdin</label>
            <label class="check"><input type="checkbox" id="accMorningstar"/> Morningstar Direct</label>
          </div>
          <div class="actions">
            <button class="btn" id="saveAccess">Save Access</button>
          </div>
        </div>
      </section>

      <!-- Security -->
      <section class="panel">
        <div class="panel-head"><h3>Security</h3></div>
        <div class="panel-body">
          <div class="field">
            <label class="label" for="pwCur">Current Password</label>
            <input id="pwCur" type="password" class="input" placeholder="Current password"/>
          </div>
          <div class="form-row">
            <div class="field">
              <label class="label" for="pwNew">New Password</label>
              <input id="pwNew" type="password" class="input" placeholder="At least 8 chars"/>
            </div>
            <div class="field">
              <label class="label" for="pwConf">Confirm New Password</label>
              <input id="pwConf" type="password" class="input" placeholder="Repeat new password"/>
            </div>
          </div>
          <div class="actions">
            <button class="btn" id="savePw">Update Password</button>
          </div>
        </div>
      </section>

      <!-- Preferences (kept minimal, corporate) -->
      <section class="panel">
        <div class="panel-head"><h3>Preferences</h3></div>
        <div class="panel-body">
          <div class="form-row">
            <div class="field">
              <label class="label" for="prefTheme">Theme</label>
              <select id="prefTheme" class="input">
                <option value="auto">Auto</option>
                <option value="light">Light</option>
                <option value="dark">Dark</option>
              </select>
            </div>
            <div class="field">
              <label class="label" for="prefTz">Timezone</label>
              <select id="prefTz" class="input">
                <option>Australia/Melbourne</option>
                <option>Australia/Sydney</option>
                <option>UTC</option>
                <option>America/New_York</option>
                <option>Europe/London</option>
              </select>
            </div>
          </div>
          <div class="form-row">
            <div class="field">
              <label class="label" for="prefDateFmt">Date Format</label>
              <select id="prefDateFmt" class="input">
                <option>DD/MM/YYYY</option>
                <option>YYYY-MM-DD</option>
                <option>MM/DD/YYYY</option>
              </select>
            </div>
            <div class="field">
              <label class="label" for="prefDigest">Email Digest</label>
              <select id="prefDigest" class="input">
                <option value="none">None</option>
                <option value="daily">Daily</option>
                <option value="weekly">Weekly</option>
              </select>
            </div>
          </div>
          <div class="inner-card">
            <label class="check"><input type="checkbox" id="alrApprovals"/> Email: Approvals assigned to me</label>
            <label class="check"><input type="checkbox" id="alrBreaches"/> Email: Mandate breaches</label>
            <label class="check"><input type="checkbox" id="alrRfp"/> Email: RFP stage changes</label>
            <label class="check"><input type="checkbox" id="liveUpdates"/> Live dashboard updates (SSE)</label>
          </div>
          <div class="actions">
            <button class="btn" id="savePrefs">Save Preferences</button>
          </div>
        </div>
      </section>

      <!-- Admin (role-gated) -->
      <section class="panel" id="adminOnly" style="display:none;">
        <div class="panel-head"><h3>Admin Shortcuts</h3></div>
        <div class="panel-body">
          <div class="actions actions-left">
            <button class="btn-ghost" id="goAdmin">Open Admin</button>
            <button class="btn-ghost" id="goUsers">User Management</button>
          </div>
          <p class="muted small">Visible only to Admins.</p>
        </div>
      </section>
    </div>
  `;
  main.appendChild(card);

  // ---- Logic
  let user = null;

  (async function init(){
    try { user = await meGet(); } catch { user = await fetchMe(); }

    // Populate
    card.querySelector("#avatar").src = user?.photo || "/avatar-placeholder.png";
    setVal("#name", user?.name);
    setVal("#employeeId", user?.employeeId);
    setVal("#email", user?.email);
    setVal("#role", user?.role);
    setVal("#team", user?.team);
    setVal("#manager", user?.manager);
    setVal("#office", user?.office);
    setVal("#costCenter", user?.costCenter);
    setVal("#dob", user?.dob);
    setVal("#phone", user?.phone);

    const acc = user?.systemsAccess || {};
    setChecked("#accBloomberg", acc.bloomberg);
    setChecked("#accFactset", acc.factset);
    setChecked("#accJpmProp", acc.jpmProp);
    setChecked("#accAladdin", acc.aladdin);
    setChecked("#accMorningstar", acc.morningstar);

    const prefs = user?.preferences || {};
    setVal("#prefTheme", prefs.theme || "auto");
    setVal("#prefTz", prefs.timezone || "Australia/Melbourne");
    setVal("#prefDateFmt", prefs.dateFormat || "DD/MM/YYYY");
    setVal("#prefDigest", prefs.emailDigest || "none");
    const e = prefs.emailAlerts || {};
    setChecked("#alrApprovals", !!e.approvals);
    setChecked("#alrBreaches", !!e.breaches);
    setChecked("#alrRfp", !!e.rfpStages);
    setChecked("#liveUpdates", prefs.liveUpdates !== false);

    // Admin
    if ((user?.role || "") === "Admin") {
      card.querySelector("#adminOnly").style.display = "";
      card.querySelector("#goAdmin").onclick = () => { state.view = "admin"; render(); };
      card.querySelector("#goUsers").onclick = () => { state.view = "admin"; render(); };
    }

    // Handlers
    on("#uploadPhoto", "click", uploadPhoto);
    on("#saveProfile", "click", saveProfile);
    on("#saveAccess",  "click", saveAccess);
    on("#savePw",      "click", savePassword);
    on("#savePrefs",   "click", savePrefs);

    // Apply theme immediately
    applyTheme(card.querySelector("#prefTheme").value);
    on("#prefTheme", "change", (e)=> applyTheme(e.target.value));
  })();

  function setVal(sel, v){ const el = card.querySelector(sel); if (!el) return; el.value = v ?? ""; }
  function setChecked(sel, v){ const el = card.querySelector(sel); if (!el) return; el.checked = !!v; }
  function on(sel, ev, fn){ const el = card.querySelector(sel); if (el) el.addEventListener(ev, fn); }

  function applyTheme(val){
    const rootEl = document.documentElement;
    if (val === "auto") {
      rootEl.dataset.theme = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) ? "dark" : "light";
    } else {
      rootEl.dataset.theme = val;
    }
  }

  async function uploadPhoto(){
    const file = card.querySelector("#photo").files?.[0];
    if (!file) return alert("Choose an image first");
    if (!["image/png","image/jpeg"].includes(file.type)) return alert("Use PNG or JPEG");
    const dataUrl = await new Promise((resolve, reject) => { const r=new FileReader(); r.onload=()=>resolve(r.result); r.onerror=reject; r.readAsDataURL(file); });
    try {
      const r = await meUploadPhoto(String(dataUrl));
      card.querySelector("#avatar").src = r.photo;
      await meUpdate({ photo: r.photo });
      user = await meGet(); CURRENT_USER = user;
      toast("Photo updated");
    } catch (err) { alert(err.message || "Upload failed"); }
  }

  async function saveProfile(){
    const payload = {
      name:        card.querySelector("#name").value.trim(),
      employeeId:  card.querySelector("#employeeId").value.trim(),
      team:        card.querySelector("#team").value,
      manager:     card.querySelector("#manager").value.trim(),
      office:      card.querySelector("#office").value,
      costCenter:  card.querySelector("#costCenter").value.trim(),
      dob:         card.querySelector("#dob").value || null,
      phone:       card.querySelector("#phone").value.trim()
    };
    try {
      const res = await meUpdate(payload);
      user = res; CURRENT_USER = res;
      toast("Profile saved");
    } catch (err) { alert(err.message || "Failed to save profile"); }
  }

  async function saveAccess(){
    const systemsAccess = {
      bloomberg:   card.querySelector("#accBloomberg").checked,
      factset:     card.querySelector("#accFactset").checked,
      jpmProp:     card.querySelector("#accJpmProp").checked,
      aladdin:     card.querySelector("#accAladdin").checked,
      morningstar: card.querySelector("#accMorningstar").checked
    };
    try {
      const res = await meUpdate({ systemsAccess });
      user = res; CURRENT_USER = res;
      toast("Access saved");
    } catch (err) { alert(err.message || "Failed to save access"); }
  }

  async function savePassword(){
    const cur = card.querySelector("#pwCur").value;
    const n1  = card.querySelector("#pwNew").value;
    const n2  = card.querySelector("#pwConf").value;
    if (n1 !== n2) return alert("New passwords do not match");
    if ((n1 || "").length < 8) return alert("New password must be at least 8 characters");
    try {
      await meSetPassword(cur, n1);
      ["#pwCur","#pwNew","#pwConf"].forEach(s => card.querySelector(s).value = "");
      toast("Password updated");
    } catch (err) { alert(err.message || "Failed to update password"); }
  }

  async function savePrefs(){
    const prefs = {
      theme:       card.querySelector("#prefTheme").value,
      timezone:    card.querySelector("#prefTz").value,
      dateFormat:  card.querySelector("#prefDateFmt").value,
      emailDigest: card.querySelector("#prefDigest").value,
      emailAlerts: {
        approvals: card.querySelector("#alrApprovals").checked,
        breaches:  card.querySelector("#alrBreaches").checked,
        rfpStages: card.querySelector("#alrRfp").checked
      },
      liveUpdates: card.querySelector("#liveUpdates").checked
    };
    try {
      await meSetPrefs(prefs);
      CURRENT_USER = await meGet();
      toast("Preferences saved");
    } catch (err) { alert(err.message || "Failed to save preferences"); }
  }

  return root;
}
3) CSS — conservative, “corporate” adjustments
Append to public/style.css (keeps things neutral and tidy):

css
Copy code
/* Corporate layout tweaks */
.page-head { margin-bottom: 8px; }
.page-title { margin:0; font-size:20px; }
.page-sub { margin:2px 0 0; color: var(--muted); }

/* Panels */
.panel { border:1px solid var(--line); border-radius:8px; background: var(--card); }
.panel-head { padding:12px 16px 0; }
.panel-head h3 { margin:0; font-size:15px; font-weight:600; }
.panel-body { padding:12px 16px 16px; display:grid; gap:12px; }

/* Identity grid */
.grid-2-tight { display:grid; grid-template-columns: 220px 1fr; gap:16px; }
@media (max-width: 900px){ .grid-2-tight { grid-template-columns: 1fr; } }

.avatar-row { display:flex; gap:12px; align-items:flex-start; }
.avatar { width:96px; height:96px; border-radius:50%; object-fit:cover; border:1px solid var(--line); }
.avatar-actions { display:grid; gap:6px; }

.id-right { display:grid; gap:12px; }
.form-row { display:grid; grid-template-columns: 1fr 1fr; gap:12px; }
@media (max-width: 700px){ .form-row { grid-template-columns: 1fr; } }

.field { display:grid; gap:6px; }
.label { font-size:12px; color: var(--muted); }
.input { height:36px; padding:6px 10px; border:1px solid var(--line); border-radius:6px; background: var(--card); color: var(--fg); }
.input:focus { border-color:#93c5fd; box-shadow: 0 0 0 3px rgba(147,197,253,.25); }

.check { display:flex; gap:8px; align-items:center; margin:4px 0; }

.access-grid { display:grid; grid-template-columns: repeat(3, minmax(0,1fr)); gap:8px 16px; }
@media (max-width: 900px){ .access-grid { grid-template-columns: 1fr 1fr; } }
@media (max-width: 600px){ .access-grid { grid-template-columns: 1fr; } }

.inner-card { border:1px solid var(--line); border-radius:6px; padding:12px; background: rgba(0,0,0,.02); }

.actions { display:flex; justify-content:flex-end; gap:8px; }
.actions-left { justify-content:flex-start; }
What changed (and why this reads “corporate”)
Identity & Employment: one structured section with clear fields (Employee ID, DOB, Team, Manager, Cost Center, Office) and no decorative widgets.

Access: flat checklist of systems (Bloomberg, FactSet, JPM proprietary, Aladdin, Morningstar) with a single Save action.

Security and Preferences: plain forms, consistent spacing, no progress bars or gamification.

Typography/spacing: tighter radii, calmer contrasts, and grid rules so nothing overlaps at any size.